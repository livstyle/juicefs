name: "fio-benchmark"

on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:
    inputs:
      size:
        description: 'file size to read/write by fio'
        required: true
        default: '1G'
      nrfiles:
        description: 'number of files to read/write by fio'
        required: true
        default: 10000
jobs:
  big-file-sequential-read-256:
    if: github.repository == 'juicedata/juicefs'
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Test 
        uses: ./.github/actions/fio
        with:
          meta_url: redis://localhost/1
          storage: minio
          bucket: http://localhost:9000/fio-test
          access_key: minioadmin
          secret_key: minioadmin
          fio_jobs: "big-file-sequential-read:  --rw=read --refill_buffers --bs=256k --size=${{ github.event.inputs.size }}"
          mysql_password: ${{secrets.MYSQL_PASSWORD_FOR_JUICEDATA}}
          PYROSCOPE_AUTH_TOKEN: ${{secrets.PYROSCOPE_AUTH_TOKEN}}
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1    

  big-file-sequential-read-512:
    if: github.repository == 'juicedata/juicefs'
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Test 
        uses: ./.github/actions/fio
        with:
          meta_url: redis://localhost/1
          storage: minio
          bucket: http://localhost:9000/fio-test
          access_key: minioadmin
          secret_key: minioadmin
          fio_jobs: "big-file-sequential-read:  --rw=read --refill_buffers --bs=512k --size=${{ github.event.inputs.size }}"
          mysql_password: ${{secrets.MYSQL_PASSWORD_FOR_JUICEDATA}}
          PYROSCOPE_AUTH_TOKEN: ${{secrets.PYROSCOPE_AUTH_TOKEN}}
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1    